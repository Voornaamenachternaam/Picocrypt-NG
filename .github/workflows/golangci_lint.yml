name: golangci-lint
on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: write
  checks: write
  contents: write
  deployments: write
  id-token: write
  issues: write
  discussions: write
  packages: write
  pages: write
  pull-requests: write
  repository-projects: write
  security-events: write
  statuses: write

jobs:
  linter:
    name: golangci-lint
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go-version: [stable]
        os: [ubuntu-latest]
    env:
      CGO_ENABLED: 0

    steps:
      - uses: actions/checkout@v5.0.0

      - uses: actions/setup-go@v6
        with:
          go-version: ${{ matrix.go-version }}

      - name: Check and get dependencies
        working-directory: ./src
        run: |
          go mod tidy
          git diff --exit-code go.mod
          # git diff --exit-code go.sum

      - name: Install plugins
        working-directory: ${{ runner.temp }}
        run: |
          git clone https://github.com/golangci/example-plugin-linter.git
          cd example-plugin-linter
          go build -o '${{ github.workspace }}/.plugins/example.so' -buildmode=plugin plugin/example.go
        env:
          CGO_ENABLED: 1

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.5.0
          working-directory: ./src
          install-mode: goinstall
          args: --timeout=5m

      - name: Test
        working-directory: ./src
        run: go test -v -cover ./...

      - name: Build
        working-directory: ./src
        run: go build -v -ldflags "-s -w" -trimpath
